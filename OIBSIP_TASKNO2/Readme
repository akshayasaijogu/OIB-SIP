# Credit Card Fraud Detection using Machine Learning

## Overview

This repository contains code and resources for building a machine learning model to detect fraudulent credit card transactions. The project aims to develop a robust classification model capable of distinguishing between legitimate and fraudulent transactions based on historical transaction data.

## Table of Contents

- [Introduction](#introduction)
- [Dataset](#dataset)
- [Project Structure](#project-structure)
- [Setup](#setup)
- [Usage](#usage)
- [Results](#results)
- [Future Enhancements](#future-enhancements)
- [Contributing](#contributing)
- [License](#license)

## Introduction

Credit card fraud poses significant challenges for financial institutions and consumers alike. Detecting fraudulent transactions in real-time is crucial to minimize financial losses and maintain trust. This project explores various machine learning techniques to build and evaluate models that can automate the detection process.

## Dataset

The dataset used in this project consists of transactions made by credit cards in September 2013 by European cardholders. It contains numerical input variables obtained through PCA transformation due to confidentiality issues. Key features include 'Time' (seconds elapsed between transactions) and 'Amount' (transaction amount), with the target variable 'Class' indicating fraud (1) or non-fraud (0).

## Dataset link
https://www.kaggle.com/datasets/mlg-ulb/creditcardfraud

## Project Structure

```
├── data/                   # Folder for dataset storage
│   ├── creditcard.csv      # CSV file containing the dataset
├── notebooks/              # Jupyter notebooks for data exploration, modeling, and evaluation
│   ├── EDA.ipynb           # Exploratory Data Analysis notebook
│   ├── Modeling.ipynb      # Modeling and evaluation notebook
│   └── Results.ipynb       # Results analysis and visualization notebook
├── src/                    # Python scripts for data preprocessing, modeling pipelines, and utilities
│   ├── data_preprocessing.py     # Scripts for data cleaning and feature engineering
│   ├── model.py                  # Script defining machine learning models
│   └── evaluation_metrics.py     # Functions for evaluating model performance
├── README.md               # Project overview, setup instructions, and usage guide
└── requirements.txt        # Python dependencies for reproducing the environment
```

## Setup

1. **Clone the repository:**
   ```
   git clone https://github.com/your-username/credit-card-fraud-detection.git
   cd credit-card-fraud-detection
   ```

2. **Install dependencies:**
   ```
   pip install -r requirements.txt
   ```

3. **Download the dataset:**
   - Download the `creditcard.csv` dataset and place it in the `data/` directory.

## Usage

- Navigate to the `notebooks/` directory to explore Jupyter notebooks (`EDA.ipynb`, `Modeling.ipynb`, `Results.ipynb`) for detailed analysis and results.
- Modify scripts in the `src/` directory for data preprocessing (`data_preprocessing.py`), model definitions (`model.py`), and evaluation metrics (`evaluation_metrics.py`).

## Results

- The project achieved a test accuracy of nearly 99.8% using the K-Nearest Neighbors (KNN) Classifier optimized with Grid Search.
- The F1-score was perfect, indicating robust classification performance.
- Synthetic Minority Over-sampling Technique (SMOTE) effectively addressed class imbalance and reduced overfitting.

## Future Enhancements

- Incorporate real-time transaction monitoring for proactive fraud detection.
- Implement ensemble learning techniques for further improving model accuracy and reliability.
- Explore deep learning approaches for capturing complex patterns in transaction data.
